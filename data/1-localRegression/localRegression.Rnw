\documentclass[11pt,twoside]{article}

%%------------font choices
\usepackage[sc]{mathpazo}
\linespread{1.05}         % Palatino needs more leading (space between lines)

%Sweave
<<sweave,echo=F,results=hide,fig=F>>=
if(!file.exists('Sweave.sty'))
	file.copy(file.path(R.home(),'share','texmf','Sweave.sty'),'.')
@
\usepackage[noae,nogin]{Sweave}

%%------------PGF/TIKZ
\usepackage{tikz}

%%------------page layout
\usepackage[left=2cm,top=3cm,right=2cm,bottom=2cm]{geometry} %changes margins
\usepackage[parfill]{parskip} % begin paragraphs with an empty line not indent
\usepackage{multicol}

%%-----------section styles
\usepackage{sectsty}
	%Put period after section number
\sectionfont{\bf\large\raggedright}
\subsectionfont{\bf\normalsize\raggedright}
\subsubsectionfont{\bf}

%%------------graphics
\usepackage{graphicx} 
\usepackage{subfigure}

%%------------mathematics
%\usepackage{amsmath,amssymb,amsthm}

%%------------tables
\usepackage{booktabs}

%%------------misc
\usepackage{verbatim} 
\usepackage[pdftex,bookmarks,colorlinks,breaklinks]{hyperref}
\hypersetup{linkcolor=black,citecolor=black,filecolor=black,urlcolor=black}

%%------------bibliography
\usepackage{natbib}   
%\setcitestyle{square,aysep={},yysep={;}}
\bibliographystyle{agufull04}

%%-----------nicer looking captions
\usepackage[font={bf,small},textfont=md,margin=30pt,aboveskip=0pt,belowskip=0pt]{caption}

%%-----------page header declaration
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhead{}
\fancyfoot{}
\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0pt}
\fancyhead[LE,RO]{\thepage}   %page numbers

\fancyhead[CE]{\small CVENxxxx FALL 2009}
\fancyhead[CO]{\small LOCAL POLYNOMIAL REGRESSION}

%\long\def\beginpgfgraphicnamed#1#2\endpgfgraphicnamed{\includegraphics{#1}}
\pgfrealjobname{localRegression} 

\begin{document}

	%Sweave options
\SweaveOpts{echo=F, prefix.string=figs/fig, fig=T, pdf=F, eps=F, pgf=F, tikz=F, external=T}
\thispagestyle{empty} 

\begin{center}
	\textbf{\Large Local Polynomial Regression}
 	{\bf\\ Cameron Bracken \\}
  	CVEN6xxx September, 2009
\end{center}

<<setup,fig=F,echo=F,results=hide,cache=F>>=
	
	suppressPackageStartupMessages(require(tikzDevice))
	suppressPackageStartupMessages(require(pgfSweave))
	suppressPackageStartupMessages(require(xtable))
	
	cashdir = "./cache"
	setCacheDir(cashdir)
	
	if(!file.exists('figs')) dir.create('figs')
	
	options('tikzDocumentDeclaration' = '\\documentclass[11pt]{article}')
	
	setwd('src')
	source('libblocfit.R')
	source('1.R')
	source('2.R')
	#source('3.R')
	setwd('..')

@

\section*{Problem 1}

The Local polynomial regression was implemented in a package dubbed \texttt{blocfit}. The functions behave exactly like the LOCFIT package.  The \texttt{blocfit()} function initializes the fit object, the \texttt{predict.blocfit()} function estimates the function at arbitrary points by calling \texttt{predict.point()}.


\VerbatimInput[frame=single,label={Fitting Function},labelposition=all]{src/blocfit.R}
\VerbatimInput[frame=single,label={Fitting Function},labelposition=all]{src/predict.blocfit.R}
\VerbatimInput[frame=single,label={Fitting Function},labelposition=all]{src/predict.point.R}

The benefit of the object oriented design is usability.  After the methods have been written, customizing the fit is extremely easy.  Plotting is also done with a method \texttt{plot.blocfit()}:

\VerbatimInput[frame=single,label={Fitting Function},labelposition=all]{src/plot.blocfit.R}

\begin{figure}[!ht]
\centering
<<deg1, echo=T, fig=T, tikz=T, cache=T,width=5,height=5,keep.source=T>>=

plot(blfit, percent = "\\%")
	
@
\caption{Sample data with local polynomial fit, $p=\Sexpr{blfit$p}$, $\alpha=\Sexpr{blfit$a}$}\label{deg1}
\end{figure}



\begin{figure}[!ht]
\centering
<<linear, echo=T, fig=T, tikz=T, cache=T,width=5,height=5>>=

	blfit <- blocfit(x, y, a=1, p=1, kern='none')
	print(blfit)
	plot(blfit, percent = "\\%" )	
	
	
@
\caption{Sample data with local polynomial fit, $p=\Sexpr{blfit$p}$, $\alpha=\Sexpr{blfit$a}$ and uniform weight structure.}\label{linear}
\end{figure}


\clearpage
\section*{Problem 2}

Plot the results:
\begin{figure}[!ht]
\centering
<<image-locfit, fig=T, tikz=T, external=T, echo=T,cache=T>>=

nbcol <- 20
nx <- length(unique(dem.x))
ny <- length(unique(dem.y))
locfitgrid <- matrix(pred$fit, nrow = ny, byrow=T)
lmgrid <- matrix(pred$fit, nrow = ny, byrow=T)
dem.x <- sort(unique(dem.x))
dem.y <- sort(unique(dem.y))

image.plot(dem.y,dem.x,locfitgrid,col=topo.colors(nbcol),xlab='Longitude',ylab='Latitude')
contour(dem.y,dem.x,locfitgrid,add=T)

@
\caption{}\label{lfimage}
\end{figure}

\begin{figure}[!ht]
\centering
<<image-lm, fig=T, tikz=T, external=T, echo=T,cache=T>>=
image(dem.y,dem.x,lmgrid,col=topo.colors(nbcol),xlab='Longitude',ylab='Latitude')
contour(dem.y,dem.x,lmgrid,add=T)
@
\caption{}\label{lfimage}
\end{figure}

\begin{figure}[!ht]
\centering
<<persp-locfit, fig=T, tikz=T, external=T, echo=T, cache=T>>=

	colf <- function(z){
		nrz <- nrow(z)
		ncz <- ncol(z)
		# Generate the desired number of colors from this palette
		# Compute the z-value at the facet centres
		zfacet <- z[-1, -1] + z[-1, -ncz] + z[-nrz, -1] + z[-nrz, -ncz]
		# Recode facet z-values into color indices
		facetcol <- cut(zfacet, nbcol)
		facetcol
	}
	color <- topo.colors(nbcol)
	
	persp(dem.y,dem.x,locfitgrid,col=color[colf(locfitgrid)],xlab='Longitude',ylab='Latitude', zlab = 'Rainfall',
		theta=30,phi=30,expand=0.5,shade=0.5,ltheta=-30)
		
@
\caption{}\label{lfimage}
\end{figure}

\begin{figure}[!ht]
\centering
<<persp-lm, fig=T, tikz=T, external=T, echo=T>>=
	persp(dem.y,dem.x,lmgrid,col=color[colf(lmgrid)],xlab='Longitude',ylab='Latitude', zlab = 'Rainfall',
		theta=30,phi=30,expand=0.5,shade=0.5,ltheta=-30)
@
\caption{}\label{lfimage}
\end{figure}


\clearpage
\nocite{Loader1999}
\bibliography{references}

\end{document}






