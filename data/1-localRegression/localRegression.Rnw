\documentclass[11pt,twoside]{article}

%%------------font choices
\usepackage[sc]{mathpazo}
\linespread{1.05}         % Palatino needs more leading (space between lines)

%Sweave
<<sweave,echo=F,results=hide,fig=F,cache=F>>=
if(!file.exists('Sweave.sty'))
	file.copy(file.path(R.home(),'share','texmf','Sweave.sty'),'.')
@
\usepackage[noae,nogin]{Sweave}

%%------------PGF/TIKZ
\usepackage{tikz}

%%------------page layout
\usepackage[left=2cm,top=3cm,right=2cm,bottom=2cm]{geometry} %changes margins
\usepackage[parfill]{parskip} % begin paragraphs with an empty line not indent
\usepackage{multicol}

%%-----------section styles
\usepackage{sectsty}
	%Put period after section number
\sectionfont{\bf\large\raggedright}
\subsectionfont{\bf\normalsize\raggedright}
\subsubsectionfont{\bf}

%%------------graphics
\usepackage{graphicx} 
\usepackage{subfigure}

%%------------mathematics
%\usepackage{amsmath,amssymb,amsthm}

%%------------tables
\usepackage{booktabs}

%%------------misc
\usepackage{verbatim} 
\usepackage[pdftex,bookmarks,colorlinks,breaklinks]{hyperref}
\hypersetup{linkcolor=black,citecolor=black,filecolor=black,urlcolor=black}

%%------------bibliography
\usepackage{natbib}   
%\setcitestyle{square,aysep={},yysep={;}}
\bibliographystyle{agufull04}

%%-----------nicer looking captions
\usepackage[font={bf,small},textfont=md,margin=30pt,aboveskip=0pt,belowskip=0pt]{caption}

%%-----------page header declaration
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhead{}
\fancyfoot{}
\renewcommand{\headrulewidth}{0pt}
\renewcommand{\footrulewidth}{0pt}
\fancyhead[LE,RO]{\thepage}   %page numbers

\fancyhead[CE]{\small CVENxxxx FALL 2009}
\fancyhead[CO]{\small LOCAL POLYNOMIAL REGRESSION}

%\long\def\beginpgfgraphicnamed#1#2\endpgfgraphicnamed{\includegraphics{#1}}
\pgfrealjobname{localRegression} 

\begin{document}

	%Sweave options
\SweaveOpts{echo=F, prefix.string=figs/fig, fig=T, pdf=F, eps=F, pgf=F, tikz=F, external=T}
\thispagestyle{empty} 

\begin{center}
	\textbf{\Large Local Polynomial Regression}
 	{\bf\\ Cameron Bracken \\}
  	CVEN6xxx September, 2009
\end{center}

<<setup,fig=F,echo=F,results=hide,cache=F>>=
	
	suppressMessages(require(tikzDevice))
	suppressMessages(require(pgfSweave))
	suppressMessages(require(xtable))
	suppressMessages(require(locfit))
	suppressMessages(require(fields))
	suppressMessages(require(xtable))
	
	cashdir = "./cache"
	setCacheDir(cashdir)
	
	if(!file.exists('figs')) dir.create('figs')
	
	options('tikzDocumentDeclaration' = '\\documentclass[11pt]{article}')

@

<<source,fig=F,echo=F,results=hide,cache=F>>=
	
	setwd('src')
	
		source('libblocfit.R')
		if(!file.exists('output')) 	dir.create('output')
		
		if(file.exists('output/1.Rdata')){
			load('output/1.Rdata')
		}else{
			source('1.R')
		}
		
		if(file.exists('output/2.Rdata')){
			load('output/2.Rdata')
		}else{
			source('2.R')
		}
		
		#source('3.R')
	setwd('..')

@

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section*{Problem 1}

The local polynomial regression was as a set of functions which behave exactly like the LOCFIT package.  The \texttt{blocfit()} function initializes the fit object, the \texttt{predict.blocfit()} function estimates the function at arbitrary points by calling \texttt{predict.point()}. Plotting is also done with a method \texttt{plot.blocfit()}.


\VerbatimInput[frame=single]{src/blocfit.R}
\VerbatimInput[frame=single]{src/predict.blocfit.R}
\VerbatimInput[frame=single]{src/predict.point.R}
%,label={Fitting Function},labelposition=all


\VerbatimInput[frame=single]{src/plot.blocfit.R}

The benefit of the object oriented design is usability.  After the methods have been written, customizing the fit is extremely easy. 

i) The resulting hat matrix is shown for the fit when $\alpha=.5$ and $p=1$ for the algorithm implemented and from locfit.  The results match exactly. 

<<fit, echo=T, fig=F, cache=F>>=

blfit1 <- blocfit(oneD$x, oneD$y, a=.5, p=1, kern='bisq')
print(round(blfit1$hat,3))
n <- length(oneD$x)
L <- matrix(NA,nrow=n,ncol=n)
for(i in 1:n){
	L[i,] <- locfit(oneD$y ~ oneD$x, ev=oneD$x[i], alpha=.5, deg=1, kern='bisq',geth=1)
}
print(round(L,3))

@

The highest weight is given to the point where an estimate is made. 

ii) The gcv (which is identical to that obtained with locfit since the hat matrix is the same):
<<gcv, echo=T, fig=F, cache=F>>=

print(blfit1$gcv)

@

iii) \autoref{deg1} shows the resuting fit and confidence intervals when $\alpha=.5$ and $p=1$. The locfit results are not shown because they fall exactly on the line shown. 

\begin{figure}[!ht]
\begin{minipage}{.5\textwidth}
\centering
<<deg1, echo=T, fig=T, tikz=T, cache=T,width=3.5,height=3.5,keep.source=T>>=

blfit1 <- blocfit(oneD$x, oneD$y, 
	a=.5, p=1, kern='bisq')

par(mar = c(2, 2, 2, 2) + 0.1)
plot(blfit1, percent = "\\%")
@
\caption{Sample data with local polynomial fit, $p=\Sexpr{blfit1$p}$, $\alpha=\Sexpr{blfit1$a}$}\label{deg1}
\end{minipage}
\begin{minipage}{.5\textwidth}
\centering
<<linear, echo=T, fig=T, tikz=T, cache=T,width=3.5,height=3.5,keep.source=T>>=

blfit2 <- blocfit(oneD$x, oneD$y, 
	a=1, p=1, kern='none')

par(mar = c(2, 2, 2, 2) + 0.1)
plot(blfit2, percent = "\\%" )		
@
\caption{Sample data with local polynomial fit, $p=\Sexpr{blfit2$p}$, $\alpha=\Sexpr{blfit2$a}$ and uniform weights.}\label{linear}
\end{minipage}
\end{figure}

iv) \autoref{linear} graphicaly shows that the results of the algorithm are identical to linear regression.  The hat matricies (which are identical) are shown below.  Points everywhere contribute to the weight, furthermore the point nearest to the estimation point does not always contribute the highest weight.
<<hat, echo=T, fig=F, cache=F>>=

print(round(blfit2$hat,3))

X <- cbind(rep(1,n), oneD$x)
lhat <- X %*% solve(t(X) %*% X) %*% t(X)
print(round(lhat,3))

@

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section*{Problem 2}

The code which fits the local and linear surface is shown below:

\VerbatimInput[frame=single]{src/2.R}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
i, ii) The surfaces from linear regression and from locfit are shown in figure \autoref{image}
\begin{figure}[!ht]
\centering
<<image, fig=T, tikz=T, external=T, echo=T, keep.source=T, cache=T, width=7.5>>=

layout(matrix(c(1,3,2,4),nrow=2))

my.image <- function(grid, main, x = dem.x, y = dem.y, n = nbcol, ...){
	par(mar = c(4, 4, 2, 4) + 0.1)
	image.plot(y, x, grid, col=topo.colors(n), xlab='Longitude',ylab='Latitude',...)
	contour(y, x, grid, nlevels=4, add=T)
	title(main = main, line=.2)
}

r1 <- range(c(locfitgrid.jan,lmgrid.jan))
r2 <- range(c(locfitgrid.jul,lmgrid.jul))

my.image(locfitgrid.jan,'locfit January', zlim=r1)
my.image(lmgrid.jan,'lm January', zlim=r1)
my.image(locfitgrid.jul,'locfit July', zlim=r2)
my.image(lmgrid.jul,'lm July', zlim=r2)

@
\caption{Precipitation map from locfit and from linear regression for each month}\label{image}
\end{figure}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
iii) The Anova results from both models are shown below. 

<<anova, fig=F, echo=T, keep.source=T,results=tex>>=

print(xtable(round(anova(lmfit.jan),2)))
print(xtable(round(anova(lmfit.jul),2)))
anova.locfit(datfit.jan, y.jan, sep='\\\\')
anova.locfit(datfit.jul, y.jul, sep='\\\\')

@

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
iv) 
\begin{figure}[!ht]
\centering
<<validation, fig=T, tikz=T, external=T, echo=T, cache=T>>=

layout(matrix(c(1,3,2,4),nrow=2))

my.plot <- function(y,fit,main,mode=c('full','dropone')){
	par(mar = c(4, 4, 2, 2) + 0.1)
	plot(y, fit, 
		xlab="Observed", 
		ylab=ifelse(mode == "full", 
			"Estimates using full data", "Drop-One Estimates"))
	abline(0,1)
	title(main = main,line=.2)
}

my.plot(y.jan, predict(datfit.jan), 'January', mode = 'full')
my.plot(y.jan, predict(fitcv.jan), 'January', mode = 'dropone')
my.plot(y.jul, predict(datfit.jul), 'July', mode = 'full')
my.plot(y.jul, predict(fitcv.jul), 'July', mode = 'dropone')

@
\caption{Observed versus predicted for Locfit model using full data and drop-one cross validation.}\label{validation}
\end{figure}

\begin{figure}[!ht]
\centering
<<validation-lm, fig=T, tikz=T, external=T, echo=T, cache=T>>=

layout(matrix(c(1,3,2,4),nrow=2))

my.plot(y.jan, predict(lmfit.jan), 'January', mode = 'full')
my.plot(y.jan, lmpred.cv.jan, 'January', mode = 'dropone')
my.plot(y.jul, predict(lmfit.jul), 'July', mode = 'full')
my.plot(y.jul, lmpred.cv.jul, 'July', mode = 'dropone')

@
\caption{Observed versus predicted for linear model using full data and drop-one cross validation.}\label{validation-lm}
\end{figure}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
v) Surface plots of predicitons from both models are shown below.
\begin{figure}[!ht]
\centering
<<persp, fig=T, tikz=T, external=T, echo=T, cache=T>>=

layout(matrix(c(1,3,2,4),nrow=2))

my.persp <- function(grid, main, x = dem.x, y = dem.y, cf = colf){
	par(mar=c(0,1,0,0))
	persp(y, x, grid,
		col=color[cf(grid)],
		xlab='Longitude',
		ylab='Latitude', 
		zlab = 'Rainfall',
		theta=30, phi=30, expand=0.5,
		shade=0.5, ltheta=-30)
	title(main=main,line=-2)
}

my.persp(locfitgrid.jan,'locfit January')
my.persp(lmgrid.jan,'lm January')
my.persp(locfitgrid.jul,'locfit July')
my.persp(lmgrid.jul,'lm July')
	
@
\caption{Local fit}\label{persp}
\end{figure}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
vi) Plots of the error are shown below. 
\begin{figure}[!ht]
\centering
<<image-error, fig=T, tikz=T, external=T, echo=T, keep.source=T, cache=T, width=7.5>>=

layout(matrix(c(1,3,2,4),nrow=2))

r1 <- range(c(locfitgrid.se.jan,lmgrid.se.jan))
r2 <- range(c(locfitgrid.se.jul,lmgrid.se.jul))

my.image(locfitgrid.se.jan,'locfit January', zlim=r1)
my.image(lmgrid.se.jan,'lm January', zlim=r1)
my.image(locfitgrid.se.jul,'locfit July', zlim=r2)
my.image(lmgrid.se.jul,'lm July', zlim=r2)

@
\caption{Precipitation error map.  Interestingly, the magnitude of the error in the linear model is much less than with locfit.}\label{image-error}
\end{figure}


\clearpage
\nocite{Loader1999}
\bibliography{references}

\end{document}






